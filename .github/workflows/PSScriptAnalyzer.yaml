name: Run PSPSScriptAnalyzer on PowerShell Scripts

on:
  pull_request:
  workflow_dispatch:

jobs:
  PSScriptAnalyzer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run PSScriptAnalyzer on PowerShell Scripts
        shell: pwsh
        run: |
          # Get all PSScript Analyzer Rules and save them in an array
          $scriptAnalyzerRules = Get-ScriptAnalyzerRule
          $Rules = @()
          $scriptAnalyzerRules | ForEach-Object { $Rules += @{ "RuleName" = $_.RuleName; "Severity" = $_.Severity } }
          
          # Create an array of the types of rules
          $Severities = @("Error")
          
          # Initialize a report variable
          $report = ""

          foreach ($Severity in $Severities) { 
              Describe "Testing PSSA $Severity Rules" -Tag $Severity {

                  It "<RuleName>" -TestCases ($Rules | Where-Object Severity -eq $Severity) {
                      param ($RuleName)

                      # Collect analysis results
                      $analysisResults = Invoke-ScriptAnalyzer -Path ./ -IncludeRule $RuleName -Recurse
                      $analysisResults | ForEach-Object { 
                          $output = "Problem in $($_.ScriptName) at line $($_.Line) with message: $($_.Message)"
                          $report += "`n$output"
                          # Print to GitHub Actions log
                          Write-Host $output
                      }
                  }
              }
          }

          # Write the summary output to the GitHub Actions Summary tab
          $summaryPath = $env:GITHUB_STEP_SUMMARY
          if ($report) {
              "### PSScriptAnalyzer Report `n" + $report | Out-File -FilePath $summaryPath -Append
          } else {
              "### PSScriptAnalyzer Report `nNo issues found." | Out-File -FilePath $summaryPath -Append
          }
