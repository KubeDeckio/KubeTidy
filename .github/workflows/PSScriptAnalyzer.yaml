name: Run PSPSScriptAnalyzer on PowerShell Scripts

on:
  pull_request:
  workflow_dispatch:

jobs:
  PSScriptAnalyzer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PSScriptAnalyzer
        shell: pwsh
        run: |
          Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser

      - name: Run PSScriptAnalyzer and output to summary
        shell: pwsh
        run: |
          # Initialize an empty string for summary output and a flag for error detection
          $summaryOutput = ""
          $errorDetected = $false

          # Get all PSScriptAnalyzer rules and store them in an array
          $scriptAnalyzerRules = Get-ScriptAnalyzerRule
          $Rules = @()
          $scriptAnalyzerRules | ForEach-Object { $Rules += @{ RuleName = $_.RuleName; Severity = $_.Severity } }

          # Create an array of severities to test
          $Severities = @("Error", "Warning", "Information")

          foreach ($Severity in $Severities) { 
              Describe "Testing PSScriptAnalyzer $Severity Rules" -Tag $Severity {
                  It "<RuleName>" -TestCases ($Rules | Where-Object { $_.Severity -eq $Severity }) {
                      param ($RuleName)

                      # Run PSScriptAnalyzer and capture the results
                      $results = Invoke-ScriptAnalyzer -Path ./ -IncludeRule $RuleName -Recurse
                      if ($results) {
                          foreach ($result in $results) {
                              $message = "Problem in $($result.ScriptName) at line $($result.Line) with message: $($result.Message)"
                              Write-Host $message
                              
                              # Append result to the summary
                              $summaryOutput += "$message`n"
                              
                              # Set error flag to true if there are problems
                              $errorDetected = $true
                          }
                      }
                  }
              }
          }

          # Output the summary to the GitHub Actions summary file
          if ($summaryOutput) {
            # Add a header for the summary
            $summaryHeader = "### PSScriptAnalyzer Results`n"
            $summaryContent = $summaryHeader + $summaryOutput
            # Write the summary content to the GITHUB_STEP_SUMMARY file
            Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value $summaryContent
          }

          # If any errors were detected, fail the workflow
          if ($errorDetected) {
              Write-Host "Errors were detected by PSScriptAnalyzer. Failing the workflow."
              exit 1
          }
