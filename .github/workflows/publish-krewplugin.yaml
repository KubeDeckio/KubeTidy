name: Publish Plugin to Krew

on:
  push: 
    tags:
      - 'v*'
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest  # Run everything in Linux

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}  # Check out the branch that triggered the workflow

      # Create tar.gz files for Linux, Darwin (AMD64, ARM64)
      - name: Create Tar Files
        run: |
          # Get the version from the tag
          version="${{ github.ref_name }}"

          # Create output directory for the tar files
          outputDir="krewplugin"
          mkdir -p "$outputDir"

          # Create platform-specific directories
          linuxAmd64Dir="$outputDir/linux_amd64"
          linuxArm64Dir="$outputDir/linux_arm64"
          darwinAmd64Dir="$outputDir/darwin_amd64"
          darwinArm64Dir="$outputDir/darwin_arm64"
          mkdir -p "$linuxAmd64Dir" "$linuxArm64Dir" "$darwinAmd64Dir" "$darwinArm64Dir"

          # Copy the kubectl-KubeTidy script to each platform directory
          cp "kubectl-KubeTidy" "$linuxAmd64Dir/kubectl-KubeTidy"
          cp "kubectl-KubeTidy" "$linuxArm64Dir/kubectl-KubeTidy"
          cp "kubectl-KubeTidy" "$darwinAmd64Dir/kubectl-KubeTidy"
          cp "kubectl-KubeTidy" "$darwinArm64Dir/kubectl-KubeTidy"

          # Set execute permission for the kubectl-KubeTidy script
          chmod +x "$linuxAmd64Dir/kubectl-KubeTidy"
          chmod +x "$linuxArm64Dir/kubectl-KubeTidy"
          chmod +x "$darwinAmd64Dir/kubectl-KubeTidy"
          chmod +x "$darwinArm64Dir/kubectl-KubeTidy"

          # Create tar.gz files for all platforms using the tar command
          tar -czf "$outputDir/KubeTidy-linux-amd64-$version.tar.gz" -C "$linuxAmd64Dir" .
          tar -czf "$outputDir/KubeTidy-linux-arm64-$version.tar.gz" -C "$linuxArm64Dir" .
          tar -czf "$outputDir/KubeTidy-darwin-amd64-$version.tar.gz" -C "$darwinAmd64Dir" .
          tar -czf "$outputDir/KubeTidy-darwin-arm64-$version.tar.gz" -C "$darwinArm64Dir" .

      # Generate SHA256 Checksums
      - name: Generate SHA256 Checksums
        run: |
          version="${{ github.ref_name }}"
          outputDir="krewplugin"

          # Generate checksums for all tar.gz files
          for file in "$outputDir"/*.tar.gz; do
            sha256sum "$file" | awk '{print $1 "  " $2}' > "${file}.sha256"
          done

      # Update KubeTidy.yaml with the new version, URLs, and checksums
      - name: Update KubeTidy.yaml
        run: |
          version="${{ github.ref_name }}"
          outputDir="krewplugin"

          # Extract SHA256 checksums for each platform
          sha_linux_amd64=$(cat "$outputDir/KubeTidy-linux-amd64-$version.tar.gz.sha256" | awk '{print $1}')
          sha_linux_arm64=$(cat "$outputDir/KubeTidy-linux-arm64-$version.tar.gz.sha256" | awk '{print $1}')
          sha_darwin_amd64=$(cat "$outputDir/KubeTidy-darwin-amd64-$version.tar.gz.sha256" | awk '{print $1}')
          sha_darwin_arm64=$(cat "$outputDir/KubeTidy-darwin-arm64-$version.tar.gz.sha256" | awk '{print $1}')

          # Read the KubeTidy.yaml template and update it with the new version and checksums
          # Update version
          sed -i "s/version:.*/version: \"$version\"/" KubeTidy.yaml
          
          # Update URLs and corresponding SHA256 checksums for each platform
          # Linux AMD64
          sed -i "s#uri: .*linux-amd64.*#uri: https://github.com/KubeDeckio/KubeTidy/releases/download/$version/KubeTidy-linux-amd64-$version.tar.gz#" KubeTidy.yaml
          sed -i "/uri: .*linux-amd64.*/!b;n;s/sha256: \".*\"/sha256: \"$sha_linux_amd64\"/" KubeTidy.yaml
          
          # Linux ARM64
          sed -i "s#uri: .*linux-arm64.*#uri: https://github.com/KubeDeckio/KubeTidy/releases/download/$version/KubeTidy-linux-arm64-$version.tar.gz#" KubeTidy.yaml
          sed -i "/uri: .*linux-arm64.*/!b;n;s/sha256: \".*\"/sha256: \"$sha_linux_arm64\"/" KubeTidy.yaml
          
          # Darwin AMD64
          sed -i "s#uri: .*darwin-amd64.*#uri: https://github.com/KubeDeckio/KubeTidy/releases/download/$version/KubeTidy-darwin-amd64-$version.tar.gz#" KubeTidy.yaml
          sed -i "/uri: .*darwin-amd64.*/!b;n;s/sha256: \".*\"/sha256: \"$sha_darwin_amd64\"/" KubeTidy.yaml
          
          # Darwin ARM64
          sed -i "s#uri: .*darwin-arm64.*#uri: https://github.com/KubeDeckio/KubeTidy/releases/download/$version/KubeTidy-darwin-arm64-$version.tar.gz#" KubeTidy.yaml
          sed -i "/uri: .*darwin-arm64.*/!b;n;s/sha256: \".*\"/sha256: \"$sha_darwin_arm64\"/" KubeTidy.yaml


      # Upload Release Assets (Including KubeTidy.yaml)
      - name: Upload Release Assets
        run: |
          version="${{ github.ref_name }}"
          outputDir="krewplugin"

          # Upload each tar.gz file and its corresponding sha256 file
          for file in "$outputDir"/*.tar.gz; do
            asset_name=$(basename "$file")
            checksum_name="${asset_name}.sha256"

            gh release upload "$version" "$file" --clobber
            gh release upload "$version" "${file}.sha256" --clobber
          done

          # Upload KubeTidy.yaml to the release
          gh release upload "$version" "KubeTidy.yaml" --clobber
