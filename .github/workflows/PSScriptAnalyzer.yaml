name: Run PSPSScriptAnalyzer on PowerShell Scripts

on:
  pull_request:
  workflow_dispatch:

jobs:
  PSScriptAnalyzer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PSScriptAnalyzer
        shell: pwsh
        run: |
          Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser

      - name: Run PSScriptAnalyzer and fail on rule violations
        shell: pwsh
        run: |
          # Create an empty string to accumulate summary output
          $summaryOutput = ""
          $errorDetected = $false
          
          # Get all PSScriptAnalyzer rules and store them in an array
          $scriptAnalyzerRules = Get-ScriptAnalyzerRule
          $Rules = @()
          $scriptAnalyzerRules | ForEach-Object { $Rules += @{ RuleName = $_.RuleName; Severity = $_.Severity } }

          # Create an array of rule severities to check
          $Severities = @("Error", "Warning", "Information")

          foreach ($Severity in $Severities) {
            Describe "Testing PSScriptAnalyzer $Severity rules" -Tag $Severity {
              It "<RuleName>" -TestCases ($Rules | Where-Object { $_.Severity -eq $Severity }) {
                param ($RuleName)

                # Analyze all scripts in the repository for the specified rule
                $results = Invoke-ScriptAnalyzer -Path ./ -IncludeRule $RuleName -Recurse
                if ($results) {
                  foreach ($result in $results) {
                    $message = "Problem in $($result.ScriptName) at line $($result.Line) with message: $($result.Message)"
                    Write-Host $message
                    
                    # Mark the error as detected
                    $errorDetected = $true

                    # Append the result to the summary output
                    $summaryOutput += "$message`n"
                  }
                }
              }
            }
          }

          # Output the summary to the GitHub Actions summary file
          if ($summaryOutput) {
            # Add a header for the summary
            $summaryHeader = "### PSScriptAnalyzer Results`n"
            $summaryContent = $summaryHeader + $summaryOutput
            # Write to the GITHUB_STEP_SUMMARY file
            Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value $summaryContent
          }

          # Fail the workflow if any errors were detected
          if ($errorDetected) {
            Write-Host "Errors were detected by PSScriptAnalyzer. Failing the workflow."
            exit 1
          }
